/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.User.Account;
import Business.User.Admin;
import java.awt.CardLayout;
import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author zhaoxi
 */
public class CustomerCreateAccountJPanel extends javax.swing.JPanel {
    private JPanel rightJPanel;
    private Admin admin;
    
    /**
     * Creates new form CustomerCreateAccountJPanel
     */
    public CustomerCreateAccountJPanel(JPanel rightJPanel,Admin admin) {
        initComponents();
        this.rightJPanel = rightJPanel;
        this.admin = admin;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCreate = new javax.swing.JButton();
        txtUser = new javax.swing.JTextField();
        txtPword = new javax.swing.JTextField();
        txtRePword = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        lblRePass = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        txtUser.setToolTipText("");

        lblUserName.setText("Username:");

        lblPass.setText("Password:");

        lblRePass.setText("Re-enter password :");

        btnBack.setText("<< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCreate)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRePass)
                                    .addComponent(lblPass, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPword, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRePword, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPass))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRePword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRePass))
                .addGap(39, 39, 39)
                .addComponent(btnCreate)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        
        boolean validUserName = isValidUserName();
        boolean validPassword = isValidPassword();
        
        if (!validUserName) { 
            JOptionPane.showMessageDialog(null, "UserName should be in format of xx@xx.xx");
            txtUser.setBorder(BorderFactory.createLineBorder(Color.red));
            lblUserName.setForeground(Color.red);
        } else if (!isUniqueUsername()) {
            JOptionPane.showMessageDialog(null, "UserName should be unique");
            txtUser.setBorder(BorderFactory.createLineBorder(Color.red));
            lblUserName.setForeground(Color.red);
        } else if (!validPassword) {
            txtUser.setBorder(null);
            lblUserName.setForeground(Color.BLACK);
            JOptionPane.showMessageDialog(null, "Password should be at least 5 digits, with at least one letter and one digit");
            txtPword.setBorder(BorderFactory.createLineBorder(Color.red));
            lblPass.setForeground(Color.red);
        } else if (!txtRePword.getText().equals(txtPword.getText())) {  
            JOptionPane.showMessageDialog(null, "Passwords do not match.");
            txtPword.setBorder(BorderFactory.createLineBorder(Color.red));
            txtRePword.setBorder(BorderFactory.createLineBorder(Color.red));
            lblPass.setForeground(Color.red);
            lblRePass.setForeground(Color.red);
        } else {
            txtUser.setBorder(null);
            txtPword.setBorder(null);
            txtRePword.setBorder(null);
            lblUserName.setForeground(Color.BLACK);
            lblPass.setForeground(Color.BLACK);
            lblRePass.setForeground(Color.BLACK);
            
            String userName = txtUser.getText();
            String pw   = txtPword.getText();
            String rpw = txtRePword.getText();

            Account account = admin.getAccountDir().addAccount();
            account.setUserName(userName);
            account.setPassWord(pw);

            Date time = new Date();
            DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss");
            String strDate = dateFormat.format(time);
            account.setAccountCreatDate(strDate);

            JOptionPane.showMessageDialog(null,"Account created successfully!");

            txtUser.setText("");
            txtPword.setText("");
            txtRePword.setText("");
        }     
    }//GEN-LAST:event_btnCreateActionPerformed

    private boolean isValidUserName() {
        String regex = "^[aA-zZ0-9]+@[aA-zZ0-9]+.[aA-zZ]+$";
        Pattern p = Pattern.compile(regex);
        if (txtUser.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(txtUser.getText());
        return m.matches();
    }
    
    private boolean isValidPassword() {
        String regex = "^(?=.*[0-9])" + "(?=.*[aA-zZ])" + ".{5,}$";
        Pattern p = Pattern.compile(regex);
        if (txtPword.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(txtPword.getText());
        return m.matches();
    }
    
    private boolean isUniqueUsername() {
        boolean unique = true;
        for (int i = 0; i < admin.getAccountDir().getAccountDir().size(); i++) {
            if (txtUser.getText().equals(admin.getAccountDir().getAccountDir().get(i).getUserName())) {
                unique = false;
                break;
            }
        }
        return unique;
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardLayout layout = (CardLayout)rightJPanel.getLayout();
        rightJPanel.remove(this);
        layout.previous(rightJPanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblRePass;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtPword;
    private javax.swing.JTextField txtRePword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
